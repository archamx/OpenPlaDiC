// <auto-generated />
using System;
using FirebirdSql.EntityFrameworkCore.Firebird.Metadata;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PlaDiC.Data;

#nullable disable

namespace PlaDiC.WebPortal.Data.Migrations
{
    [DbContext(typeof(PlaDiCDBContext))]
    [Migration("20240919072507_StartupCoreData3")]
    partial class StartupCoreData3
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Fb:ValueGenerationStrategy", FbValueGenerationStrategy.IdentityColumn)
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 31);

            modelBuilder.Entity("PlaDiC.Entities.Object", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("ADTriggerCode")
                        .HasColumnType("BLOB SUB_TYPE TEXT");

                    b.Property<string>("AITriggerCode")
                        .HasColumnType("BLOB SUB_TYPE TEXT");

                    b.Property<string>("AUTriggerCode")
                        .HasColumnType("BLOB SUB_TYPE TEXT");

                    b.Property<string>("BDTriggerCode")
                        .HasColumnType("BLOB SUB_TYPE TEXT");

                    b.Property<string>("BITriggerCode")
                        .HasColumnType("BLOB SUB_TYPE TEXT");

                    b.Property<string>("BUTriggerCode")
                        .HasColumnType("BLOB SUB_TYPE TEXT");

                    b.Property<bool>("CustomSentence")
                        .HasColumnType("BOOLEAN");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("BLOB SUB_TYPE TEXT");

                    b.Property<string>("FieldsSentence")
                        .HasColumnType("BLOB SUB_TYPE TEXT");

                    b.Property<string>("FilterSentence")
                        .HasColumnType("BLOB SUB_TYPE TEXT");

                    b.Property<string>("Folio")
                        .HasColumnType("BLOB SUB_TYPE TEXT");

                    b.Property<string>("Icono")
                        .HasColumnType("BLOB SUB_TYPE TEXT");

                    b.Property<DateTime>("InsertDate")
                        .HasColumnType("TIMESTAMP");

                    b.Property<string>("InsertRef")
                        .HasColumnType("varchar(50)");

                    b.Property<bool>("IsAccessControlled")
                        .HasColumnType("BOOLEAN");

                    b.Property<bool>("IsBlocked")
                        .HasColumnType("BOOLEAN");

                    b.Property<bool>("IsDetail")
                        .HasColumnType("BOOLEAN");

                    b.Property<bool>("IsDisabled")
                        .HasColumnType("BOOLEAN");

                    b.Property<bool>("IsLocal")
                        .HasColumnType("BOOLEAN");

                    b.Property<bool>("IsRelated")
                        .HasColumnType("BOOLEAN");

                    b.Property<bool>("IsVisible")
                        .HasColumnType("BOOLEAN");

                    b.Property<string>("Label")
                        .IsRequired()
                        .HasColumnType("varchar(200)");

                    b.Property<string>("ListSentence")
                        .HasColumnType("BLOB SUB_TYPE TEXT");

                    b.Property<int>("MaxListRecords")
                        .HasColumnType("INTEGER");

                    b.Property<int>("MaxRelatedRecords")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(200)");

                    b.Property<string>("NameHint")
                        .HasColumnType("varchar(200)");

                    b.Property<string>("NameLabel")
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Owner")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Prefix")
                        .IsRequired()
                        .HasColumnType("varchar(10)");

                    b.Property<int>("RecId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("RelatedSentence")
                        .HasColumnType("BLOB SUB_TYPE TEXT");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("TIMESTAMP");

                    b.Property<string>("UpdateRef")
                        .HasColumnType("varchar(50)");

                    b.Property<bool>("UseName")
                        .HasColumnType("BOOLEAN");

                    b.HasKey("Id");

                    b.ToTable("Object");
                });

            modelBuilder.Entity("PlaDiC.Entities.ObjectProperty", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("varchar(50)");

                    b.Property<int>("Col")
                        .HasColumnType("INTEGER");

                    b.Property<string>("DefaultValue")
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("BLOB SUB_TYPE TEXT");

                    b.Property<string>("FieldsSentece")
                        .HasColumnType("BLOB SUB_TYPE TEXT");

                    b.Property<string>("Folio")
                        .HasColumnType("BLOB SUB_TYPE TEXT");

                    b.Property<string>("Formula")
                        .HasColumnType("BLOB SUB_TYPE TEXT");

                    b.Property<string>("Group")
                        .HasColumnType("BLOB SUB_TYPE TEXT");

                    b.Property<string>("Hint")
                        .HasColumnType("varchar(200)");

                    b.Property<DateTime>("InsertDate")
                        .HasColumnType("TIMESTAMP");

                    b.Property<string>("InsertRef")
                        .HasColumnType("varchar(50)");

                    b.Property<bool>("IsDisabled")
                        .HasColumnType("BOOLEAN");

                    b.Property<bool>("IsFilter")
                        .HasColumnType("BOOLEAN");

                    b.Property<bool>("IsIndexed")
                        .HasColumnType("BOOLEAN");

                    b.Property<bool>("IsLocal")
                        .HasColumnType("BOOLEAN");

                    b.Property<bool>("IsReadOnly")
                        .HasColumnType("BOOLEAN");

                    b.Property<bool>("IsRequired")
                        .HasColumnType("BOOLEAN");

                    b.Property<bool>("IsUnique")
                        .HasColumnType("BOOLEAN");

                    b.Property<bool>("IsVisible")
                        .HasColumnType("BOOLEAN");

                    b.Property<bool>("IsVisibleInList")
                        .HasColumnType("BOOLEAN");

                    b.Property<bool>("IsVisibleInRelated")
                        .HasColumnType("BOOLEAN");

                    b.Property<string>("Label")
                        .IsRequired()
                        .HasColumnType("varchar(200)");

                    b.Property<int>("MaxLng")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("MaxVal")
                        .HasColumnType("DECIMAL(18,2)");

                    b.Property<decimal>("MinVal")
                        .HasColumnType("DECIMAL(18,2)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(200)");

                    b.Property<string>("ObjectId")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<int>("Option")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Owner")
                        .HasColumnType("varchar(50)");

                    b.Property<int>("RecId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("RefObjectId")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<string>("RegExp")
                        .HasColumnType("BLOB SUB_TYPE TEXT");

                    b.Property<string>("RelatedSentence")
                        .HasColumnType("BLOB SUB_TYPE TEXT");

                    b.Property<int>("Row")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Secuence")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Type")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("TIMESTAMP");

                    b.Property<string>("UpdateRef")
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("ObjectId");

                    b.HasIndex("RefObjectId");

                    b.ToTable("ObjectProperty");
                });

            modelBuilder.Entity("PlaDiC.Entities.PickList", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Description")
                        .HasColumnType("BLOB SUB_TYPE TEXT");

                    b.Property<string>("Folio")
                        .HasColumnType("BLOB SUB_TYPE TEXT");

                    b.Property<DateTime>("InsertDate")
                        .HasColumnType("TIMESTAMP");

                    b.Property<string>("InsertRef")
                        .HasColumnType("varchar(50)");

                    b.Property<bool>("IsDisabled")
                        .HasColumnType("BOOLEAN");

                    b.Property<bool>("IsGlobal")
                        .HasColumnType("BOOLEAN");

                    b.Property<bool>("IsLocal")
                        .HasColumnType("BOOLEAN");

                    b.Property<string>("Label")
                        .IsRequired()
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(200)");

                    b.Property<string>("ObjectPropertyId")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Owner")
                        .HasColumnType("varchar(50)");

                    b.Property<int>("RecId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("TIMESTAMP");

                    b.Property<string>("UpdateRef")
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("ObjectPropertyId")
                        .IsUnique();

                    b.ToTable("PickList");
                });

            modelBuilder.Entity("PlaDiC.Entities.PickListValue", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Code")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Color")
                        .HasColumnType("varchar(20)");

                    b.Property<string>("Folio")
                        .HasColumnType("BLOB SUB_TYPE TEXT");

                    b.Property<DateTime>("InsertDate")
                        .HasColumnType("TIMESTAMP");

                    b.Property<string>("InsertRef")
                        .HasColumnType("varchar(50)");

                    b.Property<bool>("IsDefault")
                        .HasColumnType("BOOLEAN");

                    b.Property<bool>("IsDisabled")
                        .HasColumnType("BOOLEAN");

                    b.Property<bool>("IsLocal")
                        .HasColumnType("BOOLEAN");

                    b.Property<string>("Label")
                        .IsRequired()
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Owner")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("PickListId")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<int>("RecId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Secuence")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("TIMESTAMP");

                    b.Property<string>("UpdateRef")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("PickListId");

                    b.ToTable("PickListValue");
                });

            modelBuilder.Entity("PlaDiC.Entities.ObjectProperty", b =>
                {
                    b.HasOne("PlaDiC.Entities.Object", "Object")
                        .WithMany("ObjectProperties")
                        .HasForeignKey("ObjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PlaDiC.Entities.Object", "RefObject")
                        .WithMany("RefObjectProperties")
                        .HasForeignKey("RefObjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Object");

                    b.Navigation("RefObject");
                });

            modelBuilder.Entity("PlaDiC.Entities.PickList", b =>
                {
                    b.HasOne("PlaDiC.Entities.ObjectProperty", null)
                        .WithOne("PickList")
                        .HasForeignKey("PlaDiC.Entities.PickList", "ObjectPropertyId");
                });

            modelBuilder.Entity("PlaDiC.Entities.PickListValue", b =>
                {
                    b.HasOne("PlaDiC.Entities.PickList", null)
                        .WithMany("PickListValues")
                        .HasForeignKey("PickListId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PlaDiC.Entities.Object", b =>
                {
                    b.Navigation("ObjectProperties");

                    b.Navigation("RefObjectProperties");
                });

            modelBuilder.Entity("PlaDiC.Entities.ObjectProperty", b =>
                {
                    b.Navigation("PickList");
                });

            modelBuilder.Entity("PlaDiC.Entities.PickList", b =>
                {
                    b.Navigation("PickListValues");
                });
#pragma warning restore 612, 618
        }
    }
}
